{
  "name": "billionaire-bot",
  "version": "1.0.0",
  "description": "Sophisticated GalaSwap V3 trading bot",
  "type": "module",
  "main": "dist/main.js",
  "bin": {
    "billionaire-bot": "dist/main.js"
  },
  "scripts": {
    "dev": "tsx src/main.ts start",
    "build": "tsc",
    "start": "node dist/main.js start",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:coverage:html": "jest --coverage --coverageReporters=html",
    "test:integration": "jest --testPathPatterns=integration",
    "test:unit": "jest --testPathPatterns=__tests__ --testPathIgnorePatterns=integration",
    "test:risk": "jest --testPathPatterns=risk",
    "test:api": "jest --testPathPatterns=api",
    "test:trading": "jest --testPathPatterns=trading",
    "test:utils": "jest --testPathPatterns=utils",
    "test:mock": "jest --testPathPatterns=mocks",
    "test:e2e": "jest --testPathPatterns=e2e",
    "test:security": "jest --testPathPatterns=security",
    "test:performance": "jest --testPathPatterns=performance",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:risk",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "typecheck": "tsc --noEmit",
    "test-connection": "tsx src/main.ts test",
    "manual-trade": "tsx src/main.ts trade",
    "portfolio": "tsx src/main.ts portfolio",
    "dry-run": "tsx src/scripts/dry-run-trading.ts",
    "test-components": "tsx src/scripts/test-components-only.ts",
    "test-risk-management": "tsx src/scripts/test-risk-management.ts",
    "performance:benchmark": "tsx src/scripts/performance-benchmark.ts benchmark",
    "performance:optimize": "tsx src/scripts/performance-benchmark.ts optimize",
    "performance:fastpath": "tsx src/scripts/performance-benchmark.ts fastpath",
    "performance:memory": "tsx src/scripts/performance-benchmark.ts memory",
    "performance:all": "npm run performance:benchmark && npm run performance:optimize && npm run performance:fastpath",
    "docker:build": "docker build -t billionaire-bot:latest .",
    "docker:run": "docker run --env-file .env billionaire-bot:latest",
    "docker:start": "docker build -t billionaire-bot:latest . && docker run --env-file .env billionaire-bot:latest",
    "docker:compose": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f billionaire-bot",
    "docker:shell": "docker exec -it billionaire-bot sh",
    "docker:clean": "docker system prune -f && docker volume prune -f",
    "dev-test-suite": "tsx src/scripts/dev-test-suite.ts",
    "dev-stress-test": "tsx src/scripts/dev-stress-test.ts",
    "dev-performance-benchmark": "tsx src/scripts/dev-performance-benchmark.ts",
    "dev-failure-simulator": "tsx src/scripts/dev-failure-simulator.ts",
    "dev-health-check": "tsx src/scripts/dev-test-suite.ts --quick",
    "dev-api-test": "tsx src/scripts/dev-test-suite.ts --api-only",
    "dev-component-test": "tsx src/scripts/dev-test-suite.ts --components-only",
    "dev-risk-check": "tsx src/scripts/dev-test-suite.ts --risk-only",
    "production-test": "tsx src/scripts/dev-test-suite.ts --production",
    "production-readiness-check": "npm run dev-test-suite && npm run dev-performance-benchmark && npm run test:all",
    "hunt-deals": "tsx scripts/tools/hunt-deals.ts",
    "arbitrage": "tsx scripts/tools/manual-arbitrage-steps.ts",
    "arbitrage:quote1": "tsx scripts/tools/manual-arbitrage-steps.ts quote1",
    "arbitrage:quote2": "tsx scripts/tools/manual-arbitrage-steps.ts quote2",
    "arbitrage:trade1": "tsx scripts/tools/manual-arbitrage-steps.ts trade1",
    "arbitrage:trade2": "tsx scripts/tools/manual-arbitrage-steps.ts trade2",
    "arbitrage:full": "tsx scripts/tools/manual-arbitrage-steps.ts full",
    "arbitrage:multi": "tsx scripts/tools/manual-arbitrage-steps.ts multi",
    "arbitrage:loop": "tsx scripts/arbitrage-loop.ts",
    "arbitrage:loop:multi": "tsx scripts/arbitrage-loop.ts --mode multi",
    "arbitrage:loop:fast": "tsx scripts/arbitrage-loop.ts --delay 30",
    "arbitrage:loop:duration": "tsx scripts/arbitrage-loop.ts --duration 60",
    "arbitrage:full:continuous": "tsx src/cli/trading-cli.ts auto-trade --strategies arbitrage",
    "arbitrage:smart": "tsx src/cli/trading-cli.ts auto-trade --strategies smart-arbitrage",
    "arbitrage:help": "tsx scripts/tools/manual-arbitrage-steps.ts"
  },
  "dependencies": {
    "@gala-chain/api": "^2.4.3",
    "@gala-chain/gswap-sdk": "^0.0.7",
    "bn.js": "^5.2.2",
    "commander": "^14.0.1",
    "dotenv": "^17.2.2",
    "elliptic": "^6.6.1",
    "js-sha3": "^0.9.3",
    "json-stringify-deterministic": "^1.0.12",
    "reflect-metadata": "^0.2.2",
    "sqlite3": "^5.1.7",
    "typeorm": "^0.3.27"
  },
  "devDependencies": {
    "@types/bn.js": "^5.2.0",
    "@types/elliptic": "^6.4.18",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.5.2",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "eslint": "^9.36.0",
    "jest": "^30.1.3",
    "ts-jest": "^29.4.4",
    "tsx": "^4.20.5",
    "typescript": "^5.9.2"
  }
}
